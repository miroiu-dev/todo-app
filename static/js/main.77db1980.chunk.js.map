{"version":3,"sources":["components/Button.tsx","components/Task.tsx","components/TodoList.tsx","components/InputBox.tsx","components/useFocus.tsx","components/ToggleTheme.tsx","components/AddTodo.tsx","components/TodoApp.tsx","App.tsx","index.tsx"],"names":["Button","children","outline","className","rest","css","clsx","Task","task","onRemove","showCompleted","onEdit","completedContainer","completed","completedTitle","onClick","id","title","content","TodoList","tasks","byCompleted","byTodo","byAll","filteredTasks","filter","t","todo","applyFilter","map","InputBox","label","value","onChange","hasError","htmlFor","type","useFocus","ref","useState","isFocused","setIsFocused","unfocus","useCallback","ev","current","contains","target","useEffect","document","addEventListener","removeEventListener","addFocus","ToggleThemeButton","theme","useRef","thumb","savedTheme","localStorage","getItem","AddTodo","addTask","onEditCancel","editTask","saveEditTask","setTitle","setContent","errors","setErrors","setTheme","documentElement","setAttribute","setItem","addTodo","trim","onKeyPress","key","prev","newTitle","newContent","length","e","savedTodos","JSON","parse","TodoApp","setTasks","setEditTask","all","setFilter","a","axios","todosResponse","data","slice","fetchData","stringify","newTask","Math","floor","random","console","log","Number","parseFloat","removeItem","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.77db1980.chunk.js","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\n\ntype Props = {\n\toutline?: boolean;\n\tclassName: string;\n\tonClick: () => void;\n};\n\nconst Button: React.FC<Props> = ({ children, outline, className, ...rest }) => {\n\tconst css = clsx('button', className, outline && 'outline');\n\treturn (\n\t\t<button {...rest} className={css}>\n\t\t\t{children}\n\t\t</button>\n\t);\n};\n\nexport default Button;\n","import React from 'react';\nimport Button from './Button';\nimport clsx from 'clsx';\nimport './css/task.css';\n\ntype Tasks = {\n\tid: number;\n\ttitle: string;\n\tcontent: string;\n\tcompleted: boolean;\n};\n\ntype Props = {\n\ttask: Tasks;\n\tonRemove: (id: number) => void;\n\tshowCompleted: (id: number) => void;\n\tonEdit: (task: Tasks) => void;\n};\n\nconst Task: React.FC<Props> = ({ task, onRemove, showCompleted, onEdit }) => {\n\tconst completedContainer = clsx('task-container', task.completed && 'completed');\n\tconst completedTitle = clsx('task-title', task.completed && 'completed');\n\treturn (\n\t\t<div className={completedContainer}>\n\t\t\t<div className=\"task-content\" onClick={() => showCompleted(task.id)}>\n\t\t\t\t<h3 className={completedTitle}>{task.title}</h3>\n\t\t\t\t<p className=\"task-title\">{task.content}</p>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<Button className=\"edit\" onClick={() => onEdit(task)}>\n\t\t\t\t\tEdit\n\t\t\t\t</Button>\n\t\t\t\t<Button className=\"remove\" onClick={() => onRemove(task.id)}>\n\t\t\t\t\tRemove\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Task;\n","import React from 'react';\nimport TaskComponent from './Task';\nimport Button from './Button';\nimport './css/todolist.css';\n\ntype Task = {\n\tid: number;\n\ttitle: string;\n\tcontent: string;\n\tcompleted: boolean;\n};\ntype Filter = {\n\tcompleted: boolean;\n\ttodo: boolean;\n\tall: boolean;\n};\ntype Props = {\n\ttasks: Task[];\n\tonRemove: (id: number) => void;\n\tshowCompleted: (id: number) => void;\n\tonEdit: (task: Task) => void;\n\tbyCompleted: () => void;\n\tbyTodo: () => void;\n\tbyAll: () => void;\n\tfilter: Filter;\n};\n\nconst applyFilter = (tasks: Task[], filter: Filter) => {\n\tif (filter.completed) {\n\t\treturn tasks.filter(t => t.completed);\n\t}\n\n\tif (filter.todo) {\n\t\treturn tasks.filter(t => !t.completed);\n\t}\n\n\treturn tasks;\n};\n\nconst TodoList: React.FC<Props> = ({\n\ttasks,\n\tonRemove,\n\tshowCompleted,\n\tonEdit,\n\tbyCompleted,\n\tbyTodo,\n\tbyAll,\n\tfilter,\n}) => {\n\tconst filteredTasks = applyFilter(tasks, filter);\n\n\treturn (\n\t\t<div className=\"task-list-container\">\n\t\t\t<div className=\"filter\">\n\t\t\t\t<div className=\"filter-content\">\n\t\t\t\t\t<h3>Filter by:</h3>\n\t\t\t\t\t<div className=\"filter-btn-container\">\n\t\t\t\t\t\t<Button className=\"finished\" onClick={byCompleted}>\n\t\t\t\t\t\t\tCompleted\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button className=\"todo\" onClick={byTodo}>\n\t\t\t\t\t\t\tTodo\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button className=\"unfiltered\" onClick={byAll}>\n\t\t\t\t\t\t\tAll\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{filteredTasks.map(task => (\n\t\t\t\t<TaskComponent\n\t\t\t\t\tkey={task.id}\n\t\t\t\t\ttask={task}\n\t\t\t\t\tonRemove={onRemove}\n\t\t\t\t\tshowCompleted={showCompleted}\n\t\t\t\t\tonEdit={onEdit}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</div>\n\t);\n};\n\nexport default TodoList;\n","import React from 'react';\nimport './css/inputbox.css';\nimport clsx from 'clsx';\n\ntype Props = {\n\tlabel: string;\n\tvalue: string;\n\tonChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n\thasError: boolean;\n};\n\nconst InputBox: React.FC<Props> = ({ label, value, onChange, hasError }) => {\n\tconst css = clsx('title-input input', hasError && 'required');\n\treturn (\n\t\t<div className={css}>\n\t\t\t<label htmlFor={label} className=\"label-box\">\n\t\t\t\t{label}\n\t\t\t</label>\n\t\t\t<input id={label} type=\"text\" className=\"text-box\" value={value} onChange={onChange} />\n\t\t</div>\n\t);\n};\n\nexport default InputBox;\n","import { MutableRefObject, useCallback, useEffect, useState } from 'react';\n\nexport const useFocus = (ref: MutableRefObject<HTMLDivElement | null>) => {\n\tconst [isFocused, setIsFocused] = useState(false);\n\n\tconst addFocus = () => {\n\t\tif (isFocused) return;\n\t\tsetIsFocused(true);\n\t};\n\tconst removeFocus = () => {\n\t\tsetIsFocused(false);\n\t};\n\n\tconst unfocus = useCallback(\n\t\t(ev: Event) => {\n\t\t\tif (ref.current && !ref.current.contains(ev.target as Node)) {\n\t\t\t\tremoveFocus();\n\t\t\t}\n\t\t},\n\t\t[ref]\n\t);\n\n\tuseEffect(() => {\n\t\tdocument.addEventListener('click', unfocus);\n\t\treturn () => {\n\t\t\tdocument.removeEventListener('click', unfocus);\n\t\t};\n\t}, [unfocus]);\n\treturn { isFocused, addFocus };\n};\n","import './css/themebutton.css';\nimport clsx from 'clsx';\nimport React, { useRef } from 'react';\nimport { useFocus } from './useFocus';\n\nexport const ToggleThemeButton: React.FC<{\n\ttheme: string;\n\tonClick: () => void;\n}> = ({ theme, onClick }) => {\n\tconst ref = useRef<HTMLDivElement | null>(null);\n\tconst { isFocused, addFocus } = useFocus(ref);\n\tconst thumb = clsx(\n\t\t'thumb',\n\t\tisFocused && 'focused',\n\t\ttheme === 'dark' && 'toggled'\n\t);\n\treturn (\n\t\t<div\n\t\t\tclassName=\"wrapper\"\n\t\t\tonClick={() => {\n\t\t\t\tonClick();\n\t\t\t\taddFocus();\n\t\t\t}}\n\t\t\tref={ref}\n\t\t>\n\t\t\t<div className=\"moon-wrapper\">\n\t\t\t\t<span className=\"moon\">🌜</span>\n\t\t\t</div>\n\t\t\t<div className=\"sun-wrapper\">\n\t\t\t\t<span className=\"sun\">🌞</span>\n\t\t\t</div>\n\t\t\t<div className={thumb}></div>\n\t\t</div>\n\t);\n};\n","import React, { useState, useEffect } from 'react';\nimport InputBox from './InputBox';\nimport './css/addtodo.css';\nimport { ToggleThemeButton } from './ToggleTheme';\n\nconst savedTheme = localStorage.getItem('theme');\ntype Task = {\n\tid: number;\n\ttitle: string;\n\tcontent: string;\n\tcompleted: boolean;\n};\ntype Props = {\n\taddTask: (title: string, content: string) => void;\n\tonEditCancel: () => void;\n\teditTask: null | Task;\n\tsaveEditTask: (id: number, title: string, content: string) => void;\n};\n\nconst AddTodo: React.FC<Props> = ({\n\taddTask,\n\tonEditCancel,\n\teditTask,\n\tsaveEditTask,\n}) => {\n\tconst [title, setTitle] = useState(editTask ? editTask.title : '');\n\tconst [content, setContent] = useState(editTask ? editTask.content : '');\n\tconst [errors, setErrors] = useState({ title: false, content: false });\n\n\tconst [theme, setTheme] = useState(savedTheme || 'dark');\n\n\tuseEffect(() => {\n\t\tdocument.documentElement.setAttribute('data-theme', theme);\n\t\tlocalStorage.setItem('theme', theme);\n\t}, [theme]);\n\n\tconst changeTheme = () => {\n\t\tsetTheme(prev => (prev === 'dark' ? 'light' : 'dark'));\n\t};\n\n\tconst onChangeTitle = (e: React.ChangeEvent<HTMLInputElement>) => {\n\t\tsetTitle(e.target.value);\n\t\tsetErrors({ ...errors, title: !e.target.value });\n\t};\n\tconst onChangeContent = (e: React.ChangeEvent<HTMLInputElement>) => {\n\t\tsetContent(e.target.value);\n\t\tsetErrors({ ...errors, content: !e.target.value });\n\t};\n\tconst addTodo = () => {\n\t\tif (title.trim() && content.trim()) {\n\t\t\taddTask(title, content);\n\t\t\tsetTitle('');\n\t\t\tsetContent('');\n\t\t}\n\t\tsetErrors({ title: !title.trim(), content: !content.trim() });\n\t};\n\n\tconst onCancel = () => {\n\t\tonEditCancel();\n\t\tsetTitle('');\n\t\tsetContent('');\n\t};\n\n\tconst addEditedTodo = (newTitle: string, newContent: string) => {\n\t\tif (editTask && newTitle.length && newContent.length) {\n\t\t\tsaveEditTask(editTask.id, title, content);\n\t\t\tsetTitle('');\n\t\t\tsetContent('');\n\t\t}\n\t\tsetErrors({ title: title.length === 0, content: content.length === 0 });\n\t};\n\treturn (\n\t\t<div\n\t\t\tclassName=\"add-todo-container\"\n\t\t\tonKeyPress={ev => ev.key === 'Enter' && addTodo()}\n\t\t>\n\t\t\t<div className=\"task-tracker-container\">\n\t\t\t\t<h2 className=\"task-tracker\">Task Tracker</h2>\n\t\t\t\t<div className=\"btns-container-add\">\n\t\t\t\t\t{!editTask && (\n\t\t\t\t\t\t<ToggleThemeButton\n\t\t\t\t\t\t\ttheme={theme}\n\t\t\t\t\t\t\tonClick={changeTheme}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\n\t\t\t\t\t{!editTask && (\n\t\t\t\t\t\t<button className=\"btn\" onClick={addTodo}>\n\t\t\t\t\t\t\tAdd\n\t\t\t\t\t\t</button>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t{editTask && (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"btn edit margin\"\n\t\t\t\t\t\t\tonClick={() => addEditedTodo(title, content)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tEdit\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button className=\"btn cancel\" onClick={onCancel}>\n\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<div className=\"todo-create-container\">\n\t\t\t\t<InputBox\n\t\t\t\t\tlabel=\"Title:\"\n\t\t\t\t\tvalue={title}\n\t\t\t\t\tonChange={onChangeTitle}\n\t\t\t\t\thasError={errors.title}\n\t\t\t\t/>\n\t\t\t\t<InputBox\n\t\t\t\t\tlabel=\"Todo:\"\n\t\t\t\t\tvalue={content}\n\t\t\t\t\tonChange={onChangeContent}\n\t\t\t\t\thasError={errors.content}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default AddTodo;\n","import React, { useState, useEffect } from 'react';\nimport TodoList from './TodoList';\nimport AddTodo from './AddTodo';\nimport './css/todoapp.css';\nimport axios from 'axios';\n\nconst savedTodos: Task[] | null = JSON.parse(localStorage.getItem('todos') || 'null');\n\ntype Task = {\n\tid: number;\n\ttitle: string;\n\tcontent: string;\n\tcompleted: boolean;\n};\n\nconst TodoApp = () => {\n\tconst [tasks, setTasks] = useState<Task[]>(savedTodos || []);\n\tconst [editTask, setEditTask] = useState<null | Task>(null);\n\tconst [filter, setFilter] = useState({\n\t\tcompleted: false,\n\t\ttodo: false,\n\t\tall: true,\n\t});\n\n\tuseEffect(() => {\n\t\tasync function fetchData() {\n\t\t\tif (!savedTodos) {\n\t\t\t\tconst todosResponse = await axios('https://jsonplaceholder.typicode.com/todos');\n\t\t\t\tsetTasks(todosResponse.data.slice(0, 4).map((todo: Task) => ({ ...todo, content: todo.title })));\n\t\t\t}\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tuseEffect(() => {\n\t\tlocalStorage.setItem('todos', JSON.stringify(tasks));\n\t}, [tasks]);\n\n\tconst addTask = (title: string, content: string) => {\n\t\tconst newTask = { id: Math.floor(Math.random() * 1000), title: title, content: content, completed: false };\n\t\tconsole.log([...tasks, newTask]);\n\t\tsetTasks([...tasks, newTask]);\n\t};\n\n\tconst removeTask = (id: number) => {\n\t\tif (editTask && id === editTask.id) {\n\t\t\tonEditCancel();\n\t\t}\n\n\t\tsetTasks(tasks.filter(task => task.id !== id));\n\t};\n\n\tconst showCompleted = (id: number) => {\n\t\tsetTasks(tasks.map(task => (task.id === id ? { ...task, completed: !task.completed } : task)));\n\t};\n\n\tconst showEdit = (task: Task) => {\n\t\tsetEditTask(task);\n\t};\n\n\tconst onEditCancel = () => {\n\t\tsetEditTask(null);\n\t};\n\n\tconst saveEditTask = (id: number, title: string, content: string) => {\n\t\tsetTasks(tasks.map(task => (task.id === id ? { ...task, title: title, content: content } : task)));\n\t\tsetEditTask(null);\n\t};\n\n\tconst byCompleted = () => {\n\t\tsetFilter({ ...filter, todo: false, all: false, completed: true });\n\t};\n\n\tconst byTodo = () => {\n\t\tsetFilter({ ...filter, todo: true, all: false, completed: false });\n\t};\n\n\tconst byAll = () => {\n\t\tsetFilter({ ...filter, todo: false, all: true, completed: false });\n\t};\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<AddTodo\n\t\t\t\tkey={editTask && editTask.id}\n\t\t\t\taddTask={addTask}\n\t\t\t\teditTask={editTask}\n\t\t\t\tsaveEditTask={saveEditTask}\n\t\t\t\tonEditCancel={onEditCancel}\n\t\t\t/>\n\t\t\t{tasks.length > 0 && (\n\t\t\t\t<TodoList\n\t\t\t\t\ttasks={tasks}\n\t\t\t\t\tonRemove={removeTask}\n\t\t\t\t\tshowCompleted={showCompleted}\n\t\t\t\t\tonEdit={showEdit}\n\t\t\t\t\tbyCompleted={byCompleted}\n\t\t\t\t\tbyTodo={byTodo}\n\t\t\t\t\tbyAll={byAll}\n\t\t\t\t\tfilter={filter}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default TodoApp;\n","import React from 'react';\nimport './style.css';\nimport TodoApp from './components/TodoApp';\n\nconst version = Number.parseFloat(localStorage.getItem('version') || '0');\nconst newVersion = 1.2;\n\nif (version < newVersion) {\n\tconsole.log('Outdated app: removing local storage');\n\tlocalStorage.removeItem('todos');\n}\n\nlocalStorage.setItem('version', JSON.stringify(newVersion));\n\nconst App: React.FC = () => {\n\treturn <TodoApp />;\n};\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}